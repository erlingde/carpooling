{"version":3,"sources":["services/api.js","services/scraper.js","constants/columns.js","containers/App.js","serviceWorker.js","index.js"],"names":["api","fetchRideRequests","driversPromise","axios","passengersPromise","Promise","all","e","console","error","fetchURL","url","promise","concat","resolve","scraper","data","$","cheerio","load","seats","children","undefined","name","phone","mobile","nonSmokeCar","notes","react_default","a","createElement","columns","title","dataIndex","key","tooltip","icon","type","render","text","record","popover","content","details","style","fontSize","spin","color","divider","href","link","rel","target","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","populateLocations","results","tempLocations","forEach","item","from","find","x","to","push","onRadioChange","event","_this$state","state","fetchedRideRequests","fetchedPassengerRequests","selectedFilterFrom","selectedFilterTo","setState","filteredTrips","value","tripFilter","handleRefreshHoverEnter","refreshIconClicked","refreshIconHover","handleRefreshHoverLeave","handleFilterChange","filterLocations","assertThisInitialized","filteredLocations","handleRefreshClick","fetchData","asyncToGenerator","regenerator_default","mark","_callee","timer","wrap","_context","prev","next","setInterval","secondsUntilRefresh","refreshTimer","clearInterval","sent","setTimeout","stop","_this$state2","_assertThisInitialize3","tempRequests","selectedRequest","length","includes","_assertThisInitialize4","filterRequestDates","tableLoading","_callee2","_context2","then","res","driverRequests","passengerRequests","toConsumableArray","totalLocations","locations","sort","_","remove","moment","date","isValid","year","Date","now","_this2","_this$state3","className","row","justify","col","xs","md","lg","xl","borderBottom","es_radio","Group","size","onChange","defaultValue","buttonStyle","verticalAlign","Button","checked","marginLeft","float","marginRight","cursor","onClick","onMouseEnter","onMouseLeave","es_select","mode","width","placeholder","allowClear","maxTagCount","map","Option","table","dataSource","loading","backgroundColor","onRow","_onMouseEnter","_callee3","_context3","forceUpdate","apply","arguments","Component","Boolean","window","location","hostname","match","ReactDOM","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f513b9b7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchRideRequests = () => {\r\n    try {\r\n        const driversPromise = axios('http://apis.is/rides/samferda-drivers/');\r\n        const passengersPromise = axios('http://apis.is/rides/samferda-passengers/');\r\n\r\n        return Promise.all([passengersPromise, driversPromise]);\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n\r\n}\r\n\r\nconst fetchURL = (url) => {\r\n    try {\r\n        const promise = axios(`https://cors.io/?${url}`);\r\n        \r\n        return Promise.resolve(promise);\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nexport default { fetchRideRequests, fetchURL };","import React from 'react';\r\nimport cheerio from 'cheerio';\r\n\r\nconst scrapeHtml = (data) => {\r\n    const $ = cheerio.load(data);\r\n\r\n    const seats = !$('tr:nth-child(6)').children()[1].children[0] ? undefined : $('tr:nth-child(6)').children()[1].children[0].data;\r\n    const name = !$('tr:nth-child(7)').children()[1].children[0] ? undefined : $('tr:nth-child(7)').children()[1].children[0].data;\r\n    const phone =  !$('tr:nth-child(8)').children()[1].children[0] ? undefined : $('tr:nth-child(8)').children()[1].children[0].data;\r\n    const mobile = !$('tr:nth-child(9)').children()[1].children[0] ? undefined : $('tr:nth-child(9)').children()[1].children[0].data;\r\n    const nonSmokeCar = !$('tr:nth-child(11)').children()[1].children[0] ? undefined : $('tr:nth-child(11)').children()[1].children[0].data;\r\n    const notes = !$('tr:nth-child(12)').children()[1].children[0] ? undefined : $('tr:nth-child(12)').children()[1].children[0].data;\r\n\r\n    const result = (\r\n        <div>\r\n            {seats && <p><b>Seats: </b>{seats}</p>}\r\n            {name && <p><b>Name: </b> {name}</p>}\r\n            {phone && <p><b>Phone: </b>{phone}</p>}\r\n            {mobile && <p><b>Mobile: </b>{mobile}</p>}\r\n            {nonSmokeCar && <p><b>Non Smoke Car: </b>{nonSmokeCar}</p>}\r\n            {notes && <p><b>Notes: </b>{notes}</p> }    \r\n        </div>\r\n    );\r\n\r\n    return result;\r\n}\r\n\r\nexport default { scrapeHtml };","import React from 'react';\r\nimport { Icon, Tooltip, Divider, Popover } from 'antd';\r\n\r\nconst columns = [{\r\n    title: 'From',\r\n    dataIndex: 'from',\r\n    key: 'from',\r\n  }, {\r\n    title: 'To',\r\n    dataIndex: 'to',\r\n    key: 'to',\r\n  }, {\r\n    title: 'Date',\r\n    key: 'date',\r\n    dataIndex: 'date',\r\n  }, {\r\n    title: () => (\r\n      <span>\r\n        <Tooltip title=\"Time\">\r\n          <Icon type=\"clock-circle\"/>\r\n        </Tooltip>\r\n      </span>\r\n    ),\r\n    key: 'time',\r\n    dataIndex: 'time'\r\n  }, {\r\n    title: 'Details',\r\n    key: 'link',\r\n    dataIndex: 'link',\r\n    render: (text, record) => (\r\n      <span>\r\n        <Popover content={record.details ? record.details : <Icon type=\"loading\" style={{ fontSize: 16 }} spin />}>\r\n          <Icon type=\"info-circle\" style={{ fontSize: '18px', color: 'red' }} />\r\n        </Popover>\r\n        <Divider type=\"vertical\" />\r\n        <a href={record.link} rel=\"noopener noreferrer\" target=\"_blank\">Samferða</a>\r\n      </span>\r\n    )\r\n  }];\r\n\r\n  export default columns;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Row, Col, Radio, Select, Table, Icon, Tooltip } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nimport api from '../services/api';\r\nimport scraper from '../services/scraper';\r\n\r\nimport columns from '../constants/columns'\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.selectedFilterFrom = [];\r\n    this.selectedFilterTo = [];\r\n    this.refreshTimer = 5;\r\n    \r\n    this.state = {\r\n      tripFilter: 'ride',\r\n      fetchedPassengerRequests: [],\r\n      fetchedRideRequests: [],\r\n      locations: [],\r\n      filteredTrips: [],\r\n      tableLoading: true,\r\n      refreshIconHover: false,\r\n      refreshIconClicked: false,\r\n      secondsUntilRefresh: 5\r\n    };\r\n  };\r\n\r\n  populateLocations = (results, tempLocations) => {\r\n    results.forEach((item) => {\r\n      if (item.from !== \"\" && !tempLocations.find((x) => item.from === x)) {\r\n        tempLocations.push(item.from);\r\n      } else if (item.to !== \"\" && !tempLocations.find((x) => item.to === x)) {\r\n        tempLocations.push(item.to);\r\n      }\r\n    });\r\n\r\n    return tempLocations;\r\n  }\r\n\r\n  onRadioChange = (event) => {\r\n    const { fetchedRideRequests, fetchedPassengerRequests } = this.state;\r\n\r\n    this.selectedFilterFrom = [];\r\n    this.selectedFilterTo = [];\r\n\r\n    this.setState({\r\n      filteredTrips: event.target.value === 'ride' ? fetchedRideRequests : fetchedPassengerRequests,\r\n      tripFilter: event.target.value\r\n    });\r\n  }\r\n\r\n  handleRefreshHoverEnter = (event) => {\r\n    const { refreshIconClicked } = this.state;\r\n\r\n    if (refreshIconClicked) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      refreshIconHover: true\r\n    });\r\n  }\r\n\r\n  handleRefreshHoverLeave = (event) => {\r\n    this.setState({\r\n      refreshIconHover: false\r\n    });\r\n  }\r\n\r\n  handleFilterChange = (value, type) => {\r\n    const { filterLocations } = this;\r\n\r\n    if (type === 'from') {\r\n      this.selectedFilterFrom = value;\r\n    } else {\r\n      this.selectedFilterTo = value;\r\n    }\r\n\r\n    const filteredLocations = filterLocations(type);\r\n\r\n    this.setState({\r\n      filteredTrips: filteredLocations\r\n    });\r\n  }\r\n\r\n  handleRefreshClick = () => {\r\n    const { refreshIconClicked } = this.state;\r\n    const { fetchData } = this;\r\n\r\n    if (refreshIconClicked) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      refreshIconClicked: true\r\n    }, async () => {\r\n      const timer = await setInterval(() => {\r\n        this.setState({\r\n          secondsUntilRefresh: --this.refreshTimer\r\n        });\r\n        if (this.refreshTimer === 0) {\r\n          clearInterval(timer);\r\n        }\r\n      }, 1000);\r\n      \r\n      await setTimeout(() => {\r\n        this.refreshTimer = 5;\r\n        this.setState({\r\n          refreshIconClicked: false,\r\n          secondsUntilRefresh: 5\r\n        });\r\n      }, 5000);\r\n      \r\n    });\r\n    \r\n    fetchData();\r\n  }\r\n\r\n  filterLocations = (type) => {\r\n    const { tripFilter, fetchedPassengerRequests, fetchedRideRequests } = this.state;\r\n    const { selectedFilterFrom, selectedFilterTo } = this;\r\n\r\n    let tempRequests = [];\r\n    const selectedRequest = tripFilter === 'ride' ? fetchedRideRequests : fetchedPassengerRequests;\r\n    \r\n    if (selectedFilterFrom.length === 0 && selectedFilterTo.length === 0) {\r\n      return tripFilter === 'passenger' ? fetchedPassengerRequests : fetchedRideRequests;\r\n    }\r\n\r\n    selectedRequest.forEach(item => {\r\n      if (selectedFilterFrom.length !== 0 && selectedFilterTo.length !== 0) {\r\n        if ((selectedFilterFrom.includes(item.from) && selectedFilterTo.includes(item.to))) {\r\n          tempRequests.push(item);\r\n        }\r\n      } else {\r\n          if (selectedFilterFrom.includes(item.from) || (selectedFilterTo.includes(item.to))) {\r\n            tempRequests.push(item);\r\n          }\r\n        }\r\n    });\r\n\r\n    return tempRequests;\r\n  }\r\n\r\n  fetchData = () => {\r\n    const { tripFilter } = this.state;\r\n    const { populateLocations, filterRequestDates } = this;\r\n\r\n    this.selectedFilterFrom = [];\r\n    this.selectedFilterTo = [];\r\n\r\n    this.setState({\r\n      tableLoading: true,\r\n      refreshIconHover: false\r\n    }, async () => {\r\n      await api.fetchRideRequests().then(res => {\r\n        let driverRequests = res[0].data.results;\r\n        let passengerRequests = res[1].data.results;\r\n  \r\n        passengerRequests = filterRequestDates(passengerRequests);\r\n        driverRequests = filterRequestDates(driverRequests);\r\n\r\n        [...driverRequests, ...passengerRequests].forEach((item) => {\r\n          item.key = item.link\r\n        });\r\n  \r\n        const totalLocations = populateLocations([...driverRequests, ...passengerRequests], []);\r\n\r\n        this.setState({\r\n          fetchedPassengerRequests: passengerRequests,\r\n          fetchedRideRequests: driverRequests,\r\n          filteredTrips: tripFilter === 'passenger' ? passengerRequests : driverRequests,\r\n          locations: totalLocations.sort(),\r\n          tableLoading: false\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  filterRequestDates = (data) => {\r\n    return _.remove(data, (item) => !moment(item.date, 'YYYYY-MM-DD').isValid() || moment(item.date, 'YYYYY-MM-DD').year() < moment(Date.now()).year() + 4);\r\n  }\r\n\r\n  render() {\r\n    const { filteredTrips, locations, tableLoading, refreshIconHover, refreshIconClicked, secondsUntilRefresh } = this.state;\r\n    const { handleFilterChange, onRadioChange, handleRefreshHoverEnter, handleRefreshHoverLeave, tripFilter, selectedFilterFrom, selectedFilterTo, handleRefreshClick } = this;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Col xs={24} md={20} lg={18} xl={14}>\r\n              <h1 style={{color: 'yellow', borderBottom: '1px solid yellow'}}>\r\n                Carpooling in Iceland\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Col xs={24} md={20} lg={18} xl={14}>\r\n              <Radio.Group size=\"large\" onChange={onRadioChange} defaultValue=\"ride\" buttonStyle=\"solid\" style={{'verticalAlign': 'top'}}>\r\n              <Tooltip title=\"Passengers seeking rides\">\r\n                  <Radio.Button value=\"ride\" checked={tripFilter === 'ride' ? true : false}>\r\n                    Ride\r\n                    <Icon type=\"car\" style={{'marginLeft': '6px'}}/>\r\n                  </Radio.Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Drivers seeking passengers\">\r\n                  <Radio.Button value=\"passenger\"checked={tripFilter === 'passenger' ? true : false}>\r\n                      Passengers\r\n                      <Icon type=\"user-add\" style={{'marginLeft': '6px'}}/>\r\n                    </Radio.Button>\r\n              </Tooltip>\r\n              </Radio.Group>\r\n              <Tooltip title={refreshIconClicked ? `Available to refresh in ${secondsUntilRefresh}s` : 'Refresh'}>\r\n                <Icon\r\n                  type=\"sync\"\r\n                  spin={refreshIconHover}\r\n                  style={refreshIconClicked ? {'float': 'right','marginRight': '15px', 'cursor': 'not-allowed'} : {'float': 'right','marginRight': '15px' , 'cursor': 'pointer'}}\r\n                  onClick={handleRefreshClick}\r\n                  onMouseEnter={handleRefreshHoverEnter}\r\n                  onMouseLeave={handleRefreshHoverLeave}\r\n                />\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Col xs={12} md={10} lg={9} xl={7}>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: '100%' }}\r\n                placeholder=\"From\"\r\n                onChange={value => handleFilterChange(value, 'from')}\r\n                value={selectedFilterFrom}\r\n                allowClear={true}\r\n                maxTagCount={2}\r\n                defaultValue={'All'}\r\n              >\r\n                {locations.map((item) =>\r\n                  <Select.Option key={item}>{item}</Select.Option>\r\n                )}\r\n              </Select>\r\n            </Col>\r\n            <Col xs={12} md={10} lg={9} xl={7}>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: '100%' }}\r\n                placeholder=\"To\"\r\n                onChange={value => handleFilterChange(value, 'to')}\r\n                value={selectedFilterTo}\r\n                allowClear={true}\r\n                maxTagCount={2}\r\n              >\r\n              {locations.map((item) =>\r\n                <Select.Option key={item}>{item}</Select.Option>\r\n              )}\r\n            </Select>\r\n          </Col>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Col xs={24} md={20} lg={18} xl={14}>\r\n              <Table\r\n                columns={columns}\r\n                dataSource={filteredTrips}\r\n                loading={tableLoading}\r\n                style={{'backgroundColor': '#e9ebee'}}\r\n                onRow={record => {\r\n                  return {\r\n                    onMouseEnter: async () => {\r\n                      if (!record.details) {\r\n                        await api.fetchURL(record.link).then(res => {\r\n                          record.details = scraper.scrapeHtml(res.data);\r\n                          this.forceUpdate();\r\n                       });\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}